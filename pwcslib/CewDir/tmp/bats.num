include(CewDir/bin/cew.gdb)
# Cew for asm Testing Script
# Peter Walsh Mar 2002

#------------ gdb/cew Initialization ---------------
   #set remotebaud 9600
   #target buffalo /dev/ttyS0
   # tested on the board but takes over 10 minutes to complete
   target sim
   load main.elf
   set language asm
   cew_Variables

#-------------- Local Assumptions -----------------
#   strlen.s has a malloc() routine that always returns the
#   address of STR

#-------------- Local Constants -------------------
   set $MAXLEN=30

#-------------- Local Functions -------------------
# Behaviour:
#    Generate string at STR with values 1, 2, 3 .... $arg0, \0
# Assumptions:
#    $arg0 > 0
define strGen
   set $i=1
   set $addr=(unsigned char *)&STR
   while ($i <= $arg0)
      set {unsigned char}$addr=$i
      set $i++
      set $addr++
   end
   set {unsigned char}$addr=0x0
end

#---------------- Test Cases -----------------------
   set {short int}(&cut+1)=strLen
   #tests for strLen
   #using the string from the main.s file
   tbreak *strLen
   tbreak *xstrLen
   run 
   set $d=(unsigned char *)&STR
   set $xin=$x
   set $yin=$y
   set $spin=$sp
   cew_Ncase( 48 ,
 continue, $d 
, 8)
   cew_Ncase( 49 ,
 , $x  
, $xin)
   cew_Ncase( 50 ,
 , $y  
, $yin)
   cew_Ncase( 51 ,
 , $sp  
, $spin)
   set $cnt=0
   while ($cnt < $MAXLEN)
      strGen $cnt
      tbreak *strLen
      tbreak *xstrLen
      run
      set $d=(unsigned char *)&STR
      set $xin=$x
      set $yin=$y
      set $spin=$sp
      cew_Ncase( 62 ,
 continue, $d 
, $cnt)
      cew_Ncase( 63 ,
 , $x  
, $xin)
      cew_Ncase( 64 ,
 , $y  
, $yin)
      cew_Ncase( 65 ,
 , $sp  
, $spin)
      set $cnt++
   end

   #tests for strLen
   #using  malloc()

   tbreak *strLen
   tbreak *xstrLen
   run
   set $testString="Happy St Patricks day"
   # notice how malloc() is called automatically :)
   set $d=(unsigned char *)&STR
   set $x=$xin
   set $y=$yin
   set $spin=$sp
   cew_Ncase( 81 ,
 continue, $d 
, 21)
   cew_Ncase( 82 ,
 , $x  
, $xin)
   cew_Ncase( 83 ,
 , $y  
, $yin)
   cew_Ncase( 84 ,
 , $sp  
, $spin)

   set {short int}(&cut+1)=toUpper
   #tests for toUpper

   set $i='a'
   set $ans='A'
   while ($i <= 'z')

      tbreak *toUpper
      tbreak *xtoUpper
      run
      set $b=$i 
      set $ccrin=$ccr
      cew_Ncase( 98 ,
 continue, $b  
, $ans)
      cew_Ncase( 99 ,
 , $ccr 
, $ccrin)
   
      set $i++
      set $ans++
   end

   set {short int}(&cut+1)=toLower
   #tests for toLower

   set $i='A'
   set $ans='a'
   while ($i <= 'Z')

      tbreak *toLower
      tbreak *xtoLower
      run
      set $b=$i 
      set $ccrin=$ccr
      cew_Ncase( 117 ,
 continue, $b  
, $ans)
      cew_Ncase( 118 ,
 , $ccr 
, $ccrin)
   
      set $i++
      set $ans++
   end

   set {short int}(&cut+1)=isNumeric
   #tests for isNumeric
   
   # test for '/' and ':' 
   tbreak *isNumeric
   tbreak *xisNumeric
   run
   set $b='/'
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 136 ,
 continue, $b  
, 0)
   cew_Ncase( 137 ,
 , $sp 
, $spin)
   cew_Ncase( 138 ,
 , $x 
, $xin)
   cew_Ncase( 139 ,
 , $y 
, $yin)
   cew_Ncase( 140 ,
 , $ccr 
, $ccrin)

   tbreak *isNumeric
   tbreak *xisNumeric
   run
   set $b=':'
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 150 ,
 continue, $b  
, 0)
   cew_Ncase( 151 ,
 , $sp 
, $spin)
   cew_Ncase( 152 ,
 , $x 
, $xin)
   cew_Ncase( 153 ,
 , $y 
, $yin)
   cew_Ncase( 154 ,
 , $ccr 
, $ccrin)

   set $i='0'
   while ($i <= '9')

      tbreak *isNumeric
      tbreak *xisNumeric
      run
      set $b=$i
      set $spin=$sp
      set $xin=$x
      set $yin=$y
      set $ccrin=$ccr
      cew_Ncase( 167 ,
 continue, $b  
, 1)
      cew_Ncase( 168 ,
 , $sp 
, $spin)
      cew_Ncase( 169 ,
 , $x 
, $xin)
      cew_Ncase( 170 ,
 , $y 
, $yin)
      cew_Ncase( 171 ,
 , $ccr 
, $ccrin)
  
      set $i++
   end

   set {short int}(&cut+1)=isUpper
   #tests for isUpper
   
   # test for '@' and '[' 
   tbreak *isUpper
   tbreak *xisUpper
   run
   set $b='@'
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 188 ,
 continue, $b  
, 0)
   cew_Ncase( 189 ,
 , $sp 
, $spin)
   cew_Ncase( 190 ,
 , $x 
, $xin)
   cew_Ncase( 191 ,
 , $y 
, $yin)
   cew_Ncase( 192 ,
 , $ccr 
, $ccrin)

   tbreak *isUpper
   tbreak *xisUpper
   run
   set $b='['
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 202 ,
 continue, $b  
, 0)
   cew_Ncase( 203 ,
 , $sp 
, $spin)
   cew_Ncase( 204 ,
 , $x 
, $xin)
   cew_Ncase( 205 ,
 , $y 
, $yin)
   cew_Ncase( 206 ,
 , $ccr 
, $ccrin)

   set $i='A'
   while ($i <= 'Z')

      tbreak *isUpper
      tbreak *xisUpper
      run
      set $b=$i
      set $spin=$sp
      set $xin=$x
      set $yin=$y
      set $ccrin=$ccr
      cew_Ncase( 219 ,
 continue, $b  
, 1)
      cew_Ncase( 220 ,
 , $sp 
, $spin)
      cew_Ncase( 221 ,
 , $x 
, $xin)
      cew_Ncase( 222 ,
 , $y 
, $yin)
      cew_Ncase( 223 ,
 , $ccr 
, $ccrin)
  
      set $i++
   end

   set {short int}(&cut+1)=isLower
   #tests for isLower
   
   # test for '`' and '{' 
   tbreak *isLower
   tbreak *xisLower
   run
   set $b=0x60
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 240 ,
 continue, $b  
, 0)
   cew_Ncase( 241 ,
 , $sp 
, $spin)
   cew_Ncase( 242 ,
 , $x 
, $xin)
   cew_Ncase( 243 ,
 , $y 
, $yin)
   cew_Ncase( 244 ,
 , $ccr 
, $ccrin)

   tbreak *isLower
   tbreak *xisLower
   run
   set $b='}'
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 254 ,
 continue, $b  
, 0)
   cew_Ncase( 255 ,
 , $sp 
, $spin)
   cew_Ncase( 256 ,
 , $x 
, $xin)
   cew_Ncase( 257 ,
 , $y 
, $yin)
   cew_Ncase( 258 ,
 , $ccr 
, $ccrin)

   set $i='a'
   while ($i <= 'z')

      tbreak *isLower
      tbreak *xisLower
      run
      set $b=$i
      set $spin=$sp
      set $xin=$x
      set $yin=$y
      set $ccrin=$ccr
      cew_Ncase( 271 ,
 continue, $b  
, 1)
      cew_Ncase( 272 ,
 , $sp 
, $spin)
      cew_Ncase( 273 ,
 , $x 
, $xin)
      cew_Ncase( 274 ,
 , $y 
, $yin)
      cew_Ncase( 275 ,
 , $ccr 
, $ccrin)
  
      set $i++
   end

   set {short int}(&cut+1)=isControl
   #tests for isControl
   
   # test for 0xFF and SP 
   tbreak *isControl
   tbreak *xisControl
   run
   set $b=0xFF
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 292 ,
 continue, $b  
, 0)
   cew_Ncase( 293 ,
 , $sp 
, $spin)
   cew_Ncase( 294 ,
 , $x 
, $xin)
   cew_Ncase( 295 ,
 , $y 
, $yin)
   cew_Ncase( 296 ,
 , $ccr 
, $ccrin)

   tbreak *isControl
   tbreak *xisControl
   run
   set $b=' '
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 306 ,
 continue, $b  
, 0)
   cew_Ncase( 307 ,
 , $sp 
, $spin)
   cew_Ncase( 308 ,
 , $x 
, $xin)
   cew_Ncase( 309 ,
 , $y 
, $yin)
   cew_Ncase( 310 ,
 , $ccr 
, $ccrin)

   set $i=0x00
   while ($i <= 0x1f)

      tbreak *isControl
      tbreak *xisControl
      run
      set $b=$i
      set $spin=$sp
      set $xin=$x
      set $yin=$y
      set $ccrin=$ccr
      cew_Ncase( 323 ,
 continue, $b  
, 1)
      cew_Ncase( 324 ,
 , $sp 
, $spin)
      cew_Ncase( 325 ,
 , $x 
, $xin)
      cew_Ncase( 326 ,
 , $y 
, $yin)
      cew_Ncase( 327 ,
 , $ccr 
, $ccrin)
  
      set $i++
   end

   set {short int}(&cut+1)=isSpace
   #tests for isSpace
   
   tbreak *isSpace
   tbreak *xisSpace
   run
   set $b=0x20
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 343 ,
 continue, $b  
, 1)
   cew_Ncase( 344 ,
 , $sp 
, $spin)
   cew_Ncase( 345 ,
 , $x 
, $xin)
   cew_Ncase( 346 ,
 , $y 
, $yin)
   cew_Ncase( 347 ,
 , $ccr 
, $ccrin)

   tbreak *isSpace
   tbreak *xisSpace
   run
   set $b=0x21
   set $spin=$sp
   set $xin=$x
   set $yin=$y
   set $ccrin=$ccr
   cew_Ncase( 357 ,
 continue, $b  
, 0)
   cew_Ncase( 358 ,
 , $sp 
, $spin)
   cew_Ncase( 359 ,
 , $x 
, $xin)
   cew_Ncase( 360 ,
 , $y 
, $yin)
   cew_Ncase( 361 ,
 , $ccr 
, $ccrin)

   #set {short int}(&cut+1)=wstr
   #tests for wstr
   #set $testString="Happy St Patricks day \0 \4"
   # notice how malloc() is called automatically :)
   #set $d=(unsigned char *)&STR
   #continue

   cew_Summary
   quit
